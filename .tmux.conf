# use zsh shell in tmux
set -g default-shell $SHELL

# make tmux display things in 256 colors
#set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"

# set scrollback history (k)
set -g history-limit 10000

# set Ctrl-a as the default prefix key combination
# and unbind C-b to free it up
unbind C-b
set -g prefix C-a

# use send-prefix to pass C-a through to application
bind C-a send-prefix

# shorten command delay
set -sg escape-time 1

# set window and pane index to 1 (0 by default)
set -g base-index 1
setw -g pane-base-index 1

# reload ~/.tmux.conf using PREFIX r
bind r source-file ~/.tmux.conf \; display "Configuration reloaded!"

# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind | split-window -h
bind - split-window -v

# make the current window the first window
bind T swap-window -t 1

# map Vi movement keys as pane movement keys
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
# See also: https://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# use C-h and C-l to cycle thru panes
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+

# resize panes using PREFIX C-h, C-j, C-k, C-l (formerly: PREFIX H, J, K, L)
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# mouse control for tmux v2.1
set -g mouse on

# Copy & Paste
# use vim keybindings in copy mode
setw -g mode-keys vi

# setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Status Bar
set -g status on                       # turn the status bar on
set -g status-interval 5               # set update frequencey (default 15 seconds)
#set -g status-justify centre           # center window list for clarity

# set time for the messages are displayed.
set -g display-time 2000


# Colors
# set color for status bar
set -g status-bg black
set -g status-fg yellow
set -g status-attr default

# set pane colors - highlight the active pane
set -g pane-border-fg black
set -g pane-active-border-fg brightgreen

# colorize messages in the command line
set -g message-bg black
set -g message-fg brightred

set -g display-panes-active-colour blue
set -g display-panes-colour brightred

# set window list colors - red for active and cyan for inactive
set-window-option -g window-status-fg brightblue
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

set-window-option -g window-status-current-fg brightred
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

setw -g clock-mode-colour green


set -g status-left-length 60
set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold] ⣿ #P #[fg=colour238,bg=default,nobold]'
set -g status-right-length 150
set -g status-right '#[fg=colour238,bg=default,nobold]#[fg=colour245,bg=colour238] #(whoami)@#h#[fg=colour252] #[fg=colour235,bg=colour252,bold] #(date +"%H:%M") '
set -g window-status-format '#[fg=base0,bg=default] #I #W'
set -g window-status-current-format '#[fg=black,bg=brightred]#[fg=colour251,bg=brightred,noreverse,bold] #I #W #[fg=brightred,bg=black,nobold]'
